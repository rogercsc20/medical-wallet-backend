"""Initial tables

Revision ID: 91f969784781
Revises: 
Create Date: 2025-07-08 15:15:33.483903

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '91f969784781'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conditions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('resource_type', sa.String(length=32), nullable=False),
    sa.Column('clinical_status', sa.JSON(), nullable=False),
    sa.Column('verification_status', sa.JSON(), nullable=False),
    sa.Column('category', sa.JSON(), nullable=True),
    sa.Column('severity', sa.JSON(), nullable=True),
    sa.Column('code', sa.JSON(), nullable=False),
    sa.Column('subject', sa.JSON(), nullable=False),
    sa.Column('onset_datetime', sa.DateTime(), nullable=True),
    sa.Column('abatement_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('lab_values',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('medications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('resource_type', sa.String(length=32), nullable=False),
    sa.Column('code', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('manufacturer', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('observations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('resource_type', sa.String(length=32), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('category', sa.JSON(), nullable=True),
    sa.Column('code', sa.JSON(), nullable=False),
    sa.Column('subject', sa.JSON(), nullable=False),
    sa.Column('effective_datetime', sa.DateTime(), nullable=True),
    sa.Column('value_quantity', sa.JSON(), nullable=True),
    sa.Column('interpretation', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('patients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('resource_type', sa.String(length=32), nullable=False),
    sa.Column('name', sa.JSON(), nullable=False),
    sa.Column('gender', sa.String(length=16), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('telecom', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('resource_type', sa.String(length=32), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('class', sa.JSON(), nullable=False),
    sa.Column('subject', sa.JSON(), nullable=False),
    sa.Column('period', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('mfa_secret', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('records')
    op.drop_table('patients')
    op.drop_table('observations')
    op.drop_table('medications')
    op.drop_table('lab_values')
    op.drop_table('conditions')
    # ### end Alembic commands ###
